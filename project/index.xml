<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Projects on My Project</title>
    <link>/project/</link>
    <description>Recent content in Projects on My Project</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 11 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="/project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Project 1</title>
      <link>/project/project1/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project1/</guid>
      <description>Joel James (jj35362) library(ggplot2) library(ggrepel) library(tidyr) library(tidyverse) library(dplyr) county_pop &amp;lt;- read.csv(&amp;quot;covid_county_population_usafacts.csv&amp;quot;, header = TRUE) cases_fatalities &amp;lt;- read.csv(&amp;quot;Cases and Fatalities.csv&amp;quot;, header = TRUE) county_health &amp;lt;- read.csv(&amp;quot;2020 County Health Rankings Texas Data - v1_0 (1).csv&amp;quot;, header = TRUE) county_class &amp;lt;- read.csv(&amp;quot;PHR_MSA_County_masterlist.csv&amp;quot;, header = TRUE) Introduction: I have chosen to upload four datasets with information about each of Texas&#39; counties. This information includes population size, county ID&#39;s, classification, health statistics like the percent of those in each county who smoke and who have diabeties, and finally, the number of people infected with COVID in each county since March 2020.</description>
    </item>
    
    <item>
      <title>Project 2</title>
      <link>/project/project2/</link>
      <pubDate>Fri, 11 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>/project/project2/</guid>
      <description>#Class diags class_diag&amp;lt;-function(probs,truth){ tab&amp;lt;-table(factor(probs&amp;gt;.5,levels=c(&amp;quot;FALSE&amp;quot;,&amp;quot;TRUE&amp;quot;)),truth) acc=sum(diag(tab))/sum(tab) sens=tab[2,2]/colSums(tab)[2] spec=tab[1,1]/colSums(tab)[1] ppv=tab[2,2]/rowSums(tab)[2] if(is.numeric(truth)==FALSE &amp;amp; is.logical(truth)==FALSE) truth&amp;lt;-as.numeric(truth)-1 #CALCULATE EXACT AUC ord&amp;lt;-order(probs, decreasing=TRUE) probs &amp;lt;- probs[ord]; truth &amp;lt;- truth[ord] TPR=cumsum(truth)/max(1,sum(truth)) FPR=cumsum(!truth)/max(1,sum(!truth)) dup&amp;lt;-c(probs[-1]&amp;gt;=probs[-length(probs)], FALSE) TPR&amp;lt;-c(0,TPR[!dup],1); FPR&amp;lt;-c(0,FPR[!dup],1) n &amp;lt;- length(TPR) auc&amp;lt;- sum( ((TPR[-1]+TPR[-n])/2) * (FPR[-1]-FPR[-n]) ) data.frame(acc,sens,spec,ppv,auc) } library(ggplot2) library(ggrepel) library(tidyr) library(tidyverse) ## ── Attaching packages ───────────────────────────────────────────────────────────────────── tidyverse 1.3.0 ── ## ✓ tibble 3.0.3 ✓ dplyr 1.0.1 ## ✓ readr 1.3.1 ✓ stringr 1.4.0 ## ✓ purrr 0.</description>
    </item>
    
  </channel>
</rss>
